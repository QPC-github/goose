#!/usr/bin/env ruby

# Input:
# [
#   {
#     "linter": "no-log-period",
#     "severity": "warning",
#     "path": "cmd/main/main.go",
#     "line": 60,
#     "col": 0,
#     "message": ":\tlog(nil, err).Debug(\"main terminated.\")"
#   }
# ]
#
# Output:
# <?xml version="1.0" encoding="UTF-8"?>
# <checkstyle version="5.0">
#     <file name="cmd/git-mirror/main.go">
#         <error column="0" line="60" message=':  log(nil, err).Debug("main terminated.")' severity="warning" source="no-log-period">
#         </error>
#     </file>
# </checkstyle>

require 'fcntl'
require 'json'
require "rexml/document"

module GoMetaLinterToCheckstyle
  class << self
    def call
      raise "Usage: #$0 < metalinter-output.json" unless STDIN.fcntl(Fcntl::F_GETFL, 0) == 0
      puts translate(ARGF.read)
    end

    def translate(input)
      json = JSON.parse(input)

      xml = REXML::Document.new
      root = xml.add_element('checkstyle', 'version' => 5.0)

      files = Hash.new { |h, k| h[k] = [] }
      json.each do |line|
        files[line["path"]] << line
      end

      files.each do |file, lines|
        file_el = root.add_element('file', 'name' => file)
        lines.each do |line|
          file_el.add_element('error',
            'line' => line['line'],
            'column' => line['col'],
            'severity' => line['severity'],
            'message' => line['message'],
            'source' => line['linter'],
          )
        end
      end

      io = StringIO.new
      xml.write(REXML::Output.new(io, "UTF-8"))
      io.string
    end
  end
end

__FILE__ == $PROGRAM_NAME and GoMetaLinterToCheckstyle.call
